// Generated by dongchuan 2017.01.07
function tableChart(param){

  var setting = {
    target: "body",
    width: 500,
    height: 300
  };
  
  $.extend(setting, param);
  
  var chart = {};
  var table;
  var data = [];
  var columns = [];
  
  chart.render = function () { // <-2A
      if (!table) {
          table = d3.select(setting.target)
                    .append('table') // <-2B
                    .attr("class","d3-table")
                    .attr("height", setting.height)
                    .attr("width", setting.width);
      }

      renderTable();
  };

  function renderTable() {
      var thead = table.append('thead')
      var tbody = table.append('tbody');

      // append the header row
      thead.append('tr')
        .selectAll('th')
        .data(columns).enter()
        .append('th')
          .text(function (column) { return column; });

      // create a row for each object in the data
      var rows = tbody.selectAll('tr')
        .data(data)
        .enter()
        .append('tr');

      // create a cell in each row for each column
      var cells = rows.selectAll('td')
        .data(function (row) {
          return columns.map(function (column) {
            return {column: column, value: row[column]};
          });
        })
        .enter()
        .append('td')
          .text(function (d) { return d.value; });    
  }

  chart.width = function (w) {
      if (!arguments.length) return setting.width;
      width = w;
      return chart;
  };

  chart.height = function (h) { // <-1C
      if (!arguments.length) return setting.height;
      height = h;
      return chart;
  };

  chart.data = function (d) {
      if (!arguments.length) return data;
      data = d;
      return chart;
  };
  
  chart.columns = function (d) {
      if (!arguments.length) return columns;
      columns = d;
      return chart;
  };

  return chart;

}